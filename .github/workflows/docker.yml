name: Docker

on:
    push:
    pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

# adapted from https://raw.githubusercontent.com/stefanprodan/podinfo/master/.github/workflows/release.yml
#
jobs:
  containers:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    env:
      PUSH_PACKAGES: ${{ github.repository_owner == 'PDAL' && github.event_name != 'pull_request'  }}
    steps:
      - uses: actions/checkout@v2
      - name: Lint
        id: lint
        run: |
          echo "are we pushing packages" ${{ env.PUSH_PACKAGES }}
          echo "event_name" ${{ github.event_name }}
          echo "ref" ${{ github.ref }}
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - if: ${{ env.PUSH_PACKAGES == 'true' }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          push: ${{ env.PUSH_PACKAGES == 'true' }}
          builder: ${{ steps.buildx.outputs.name }}
          file: "./Dockerfile"
          context: .
          platforms: "linux/amd64,linux/arm64"

          # We need to pass in the SHA to the Dockerfile so it can checkout
          # our code. It is a different active SHA depending on whether it is a
          # PR or a simple push
          build-args: |
            GITHUB_SHA=${{ github.event.pull_request.head.sha != '' && github.event.pull_request.head.sha || github.sha }}
            GITHUB_REPOSITORY=${{ github.event.pull_request.head.repo.full_name != '' && github.event.pull_request.head.repo.full_name || github.repository }}
          tags: |
            ghcr.io/hobuinc/untwine:${{ steps.prep.outputs.VERSION }}
            ghcr.io/hobuinc/untwine:latest
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.prep.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.prep.outputs.BUILD_DATE }}
